{"ast":null,"code":"var _jsxFileName = \"D:\\\\amisham\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from './Stuslice';\nimport { loginadmin } from './AdminSlice';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"student\");\n  const myDispatch = useDispatch();\n  const myNav = useNavigate();\n\n  // const loggedIn=useSelector(state=>state.stuUser.user);\n  // const handleInput=(e)=>{\n  //     let name=e.target.name;\n  //     let value=e.target.value;\n  //     setInput(values=>({...values,[name]:value}))\n  //     console.log(setInput);\n\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (userType == \"student\") {\n      let url = `http://localhost:4000/student/?email=${email}`;\n      axios.get(url).then(res => {\n        let idwithname = {};\n        if (res.data.length == 1) {\n          if (res.data[0].password == password) {\n            const username = res.data[0].name;\n            const userid = res.data[0].id;\n            idwithname = {\n              \"name\": username,\n              \"iddd\": userid\n            };\n\n            // const userData=login(res.data[0].name)\n            // console.log(userData.payload);\n            myDispatch(login(idwithname));\n            myNav('/userpage');\n          } else {\n            alert(\"Invalid Password\");\n          }\n        } else {\n          alert(\"Invalid Email !!!\");\n        }\n      });\n    } else {\n      e.preventDefault();\n      let url = `http://localhost:4000/adminlogin/?adminemail=${email}`;\n      axios.get(url).then(res => {\n        // console.log(res.data);\n\n        if (res.data.length == 1) {\n          if (res.data[0].adminpassword == password) {\n            let user = res.data[0].adminname;\n            myDispatch(loginadmin(user));\n            myNav('/admindash');\n          } else {\n            alert(\"invalid password\");\n          }\n        } else {\n          alert(\"invalid email\");\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              placeholder: \"Enter E-mail\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: e => {\n                setPassword(e.target.value);\n              },\n              placeholder: \"Enter Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"student\",\n            value: userType,\n            onChange: e => setUserType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"regis\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"New User!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn2\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/register`,\n                children: \"REGISTER HERE.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"ty2g57xyk4aIWrgNdmA4Y53wPK8=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useState","axios","useDispatch","useNavigate","login","loginadmin","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","userType","setUserType","myDispatch","myNav","handleSubmit","e","preventDefault","url","get","then","res","idwithname","data","length","username","name","userid","id","alert","adminpassword","user","adminname","children","className","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","_c","$RefreshReg$"],"sources":["D:/amisham/src/Login.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login } from './Stuslice';\r\nimport { loginadmin } from './AdminSlice';\r\nimport './Login.css'\r\n\r\n\r\nconst Login=()=>\r\n{\r\n    const[email,setEmail]=useState(\"\");\r\n    const[password,setPassword]=useState(\"\");\r\n    const[userType,setUserType]=useState(\"student\");\r\n   \r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const myDispatch=useDispatch();\r\n    const myNav=useNavigate();\r\n\r\n\r\n\r\n    // const loggedIn=useSelector(state=>state.stuUser.user);\r\n    // const handleInput=(e)=>{\r\n    //     let name=e.target.name;\r\n    //     let value=e.target.value;\r\n    //     setInput(values=>({...values,[name]:value}))\r\n    //     console.log(setInput);\r\n        \r\n    // }\r\n   \r\n\r\n\r\n\r\nconst handleSubmit=(e)=>\r\n{\r\n     \r\n        e.preventDefault();\r\n         \r\n            \r\n     if (userType == \"student\") \r\n     {\r\n            \r\n          \r\n        let url= `http://localhost:4000/student/?email=${email}`;\r\n      \r\n\r\n        axios.get(url).then((res)=>{\r\n        \r\n\r\n        let idwithname = {}\r\n            if(res.data.length==1)\r\n            {\r\n                if(res.data[0].password==password){\r\n                    const username=res.data[0].name;\r\n                    const userid=res.data[0].id;\r\n                    idwithname = {\r\n                        \"name\" : username,\r\n                        \"iddd\" : userid\r\n                    }\r\n                \r\n                    // const userData=login(res.data[0].name)\r\n                    // console.log(userData.payload);\r\n                    myDispatch(login(idwithname));\r\n                   \r\n                   myNav('/userpage')\r\n\r\n                 \r\n                }\r\n                else \r\n                {\r\n                alert(\"Invalid Password\");\r\n                }\r\n            }\r\n            else \r\n            {   \r\n                 alert(\"Invalid Email !!!\");\r\n            }\r\n            \r\n            \r\n\r\n        })\r\n     \r\n            \r\n    }\r\n   \r\n    else{\r\n        e.preventDefault();\r\n        let url=`http://localhost:4000/adminlogin/?adminemail=${email}`\r\n        axios.get(url).then((res)=>{\r\n            // console.log(res.data);\r\n          \r\n            if(res.data.length==1)\r\n            {\r\n                if(res.data[0].adminpassword==password)\r\n                {\r\n                    let user=res.data[0].adminname;\r\n                    myDispatch(loginadmin(user));\r\n\r\n                    myNav('/admindash')\r\n                  \r\n                    \r\n                }\r\n                else{\r\n                    alert(\"invalid password\")\r\n                }\r\n                \r\n                \r\n            }\r\n            else{\r\n                alert(\"invalid email\");\r\n                \r\n            }\r\n            \r\n        })\r\n     \r\n\r\n\r\n    }\r\n\r\n          \r\n      \r\n  }\r\n  \r\n \r\n  \r\n    return(\r\n        <>\r\n        <div id=\"wrapper\">\r\n          <div id=\"box\">\r\n          <div id=\"login\">\r\n        \r\n           <div className=\"input-box\">\r\n          <input type='email'  name='email' value={email} onChange={(e)=>{setEmail(e.target.value)}} placeholder=\"Enter E-mail\" required/>\r\n\r\n         <input type=\"password\" name=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}} placeholder=\"Enter Password\" required/>\r\n      \r\n           </div>\r\n         <select name=\"student\" value={userType} onChange={(e) =>setUserType(e.target.value)} >\r\n        \r\n          <option value={\"student\"}>Student</option>\r\n          <option value={\"admin\"}>Admin</option>\r\n\r\n         </select>\r\n         <br/>\r\n       \r\n           \r\n           <button onClick={handleSubmit} className=\"btn\">\r\n           Login</button>\r\n           </div>\r\n           <div id=\"regis\">\r\n            <h2>New User!!</h2>\r\n           \r\n          \r\n                <button id='btn2'>\r\n             <h3> <Link to={`/register`}>REGISTER HERE.</Link></h3>\r\n              </button>\r\n              \r\n            </div>\r\n            </div>\r\n           </div>\r\n        </>\r\n    );\r\n  }\r\n\r\n    export default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}